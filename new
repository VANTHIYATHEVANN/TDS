package main_test

import (
	"bytes"
	"encoding/json"
	"net/http"
	"net/http/httptest"
	"testing"

	"github.com/stretchr/testify/assert" // Import the testify library for assertions
)

func TestSetMessageEndpoint(t *testing.T) {
	// Create a new request to set the message
	requestBody, _ := json.Marshal(map[string]string{"message": "Test Message"})
	request := httptest.NewRequest("POST", "/setMessage", bytes.NewBuffer(requestBody))
	response := httptest.NewRecorder()

	// Call the setMessageHandler function directly
	setMessageHandler(response, request)

	// Check the response status code
	assert.Equal(t, http.StatusOK, response.Code)

	// Check the response body
	expectedResponseBody := "Message set to: Test Message"
	assert.Equal(t, expectedResponseBody, response.Body.String())
}

func TestGetEchoedMessageEndpoint(t *testing.T) {
	// Create a new request to get the echoed message
	request := httptest.NewRequest("GET", "/getEchoedMessage", nil)
	response := httptest.NewRecorder()

	// Call the getEchoedMessageHandler function directly
	getEchoedMessageHandler(response, request)

	// Check the response status code
	assert.Equal(t, http.StatusOK, response.Code)

	// Check the response body
	expectedResponseBody := "Test Message" // Assuming the echoed message is "Test Message"
	assert.Equal(t, expectedResponseBody, response.Body.String())
}
