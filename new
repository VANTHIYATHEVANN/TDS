import React from 'react';
import { render, fireEvent, waitFor } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import App from './App';

// Mock fetch API to simulate network requests
global.fetch = jest.fn(() =>
  Promise.resolve({
    text: () => Promise.resolve('Test Message'),
  })
);

describe('App component', () => {
  beforeEach(() => {
    fetch.mockClear(); // Clear fetch mock between tests
  });

  test('renders initial echoed message', async () => {
    const { getByText } = render(<App />);
    await waitFor(() => {
      expect(getByText('Echoed Message: Test Message')).toBeInTheDocument();
    });
  });

  test('sets message on backend when button is clicked', async () => {
    const { getByText, getByPlaceholderText } = render(<App />);
    const input = getByPlaceholderText('Enter message');
    const button = getByText('Set Message');

    fireEvent.change(input, { target: { value: 'New Message' } });
    fireEvent.click(button);

    await waitFor(() => {
      expect(fetch).toHaveBeenCalledWith('http://localhost:8080/setMessage', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ message: 'New Message' }),
      });
    });
  });

  test('sets message on backend when Enter key is pressed', async () => {
    const { getByPlaceholderText } = render(<App />);
    const input = getByPlaceholderText('Enter message');

    fireEvent.change(input, { target: { value: 'Another Message' } });
    fireEvent.keyDown(input, { key: 'Enter', code: 'Enter' });

    await waitFor(() => {
      expect(fetch).toHaveBeenCalledWith('http://localhost:8080/setMessage', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ message: 'Another Message' }),
      });
    });
  });
});
